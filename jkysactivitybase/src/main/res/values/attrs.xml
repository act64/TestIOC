<?xml version="1.0" encoding="utf-8"?>
<resources>
    <!-- LockPatternView class attributes -->
    <declare-styleable name="LockPatternView">

        <!--
             Aspect to use when drawing LockPatternView. Choices are "square"(default), "lock_width"
             or "lock_height"
        -->
        <attr name="aspect">
            <enum name="square" value="0" />
            <enum name="lockWidth" value="1" />
            <enum name="lockHeight" value="2" />
        </attr>
        <attr name="line" format="color" />
        <attr name="btnNormal" format="reference" />
        <attr name="btnTouched" format="reference" />
        <attr name="circleNormal" format="reference" />
        <attr name="circleGreen" format="reference" />
        <attr name="circleRed" format="reference" />
        <attr name="arrowGreenUp" format="reference" />
        <attr name="arrowRedUp" format="reference" />
    </declare-styleable>
    <declare-styleable name="CircleImageView">
        <attr name="border_width" format="dimension" />
        <attr name="border_color" format="color" />
    </declare-styleable>
    <declare-styleable name="PullToRefresh">

        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="ptrRefreshableViewBackground" format="reference|color" />

        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
        <attr name="ptrHeaderBackground" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views -->
        <attr name="ptrHeaderTextColor" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextColor" format="reference|color" />

        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" />
            <flag name="pullFromStart" value="0x1" />
            <flag name="pullFromEnd" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />

            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="ptrShowIndicator" format="reference|boolean" />

        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
        <attr name="ptrDrawable" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableStart" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
        <attr name="ptrHeaderTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

        <!--
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be 
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
        -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
    </declare-styleable>
	
    <declare-styleable name="RoundProgressBar">  
        <attr name="roundColor" format="color"/>
        <attr name="roundProgressColor" format="color"/>
        <attr name="roundWidth" format="dimension"></attr>
        <attr name="textColor" format="color" />  
        <attr name="textSize" format="dimension" /> 
        <attr name="max" format="integer"></attr> 
        <attr name="textIsDisplayable" format="boolean"></attr>
        <attr name="style">
            <enum name="STROKE" value="0"></enum>
            <enum name="FILL" value="1"></enum>
        </attr>
    </declare-styleable>
    
     <declare-styleable name="myRel">
        <attr name="name" format="reference" />
        <attr name="is_select" format="boolean" />
    </declare-styleable>
    <declare-styleable name="LinearStar">
        <attr name="star_number"  format="integer"/>
        <attr name="star_size" format="dimension"/>
        <attr name="star_padding" format="dimension">
        </attr>
    </declare-styleable>
     <declare-styleable name="SwipeBackLayout">
        <attr name="edge_size" format="dimension"/>
        <attr name="edge_flag">
            <enum name="left" value="0" />
            <enum name="right" value="1" />
            <enum name="bottom" value="2" />
            <enum name="all" value="3" />
        </attr>
        <attr name="shadow_left" format="reference"/>
        <attr name="shadow_right" format="reference"/>
        <attr name="shadow_bottom" format="reference"/>
    </declare-styleable>

    <attr name="SwipeBackLayoutStyle" format="reference"/>

    <declare-styleable name="CircleProgress">
        <!-- 进度条的背景色-->
        <attr name="bgColor" format="color" />
        <!-- 进度条的前景色 起始颜色-->
        <attr name="foreStartColor" format="color" />
        <!-- 进度条的前景色 结束颜色-->
        <attr name="foreEndColor" format="color" />
        <!-- 进度条的大小-->
        <attr name="progressWidth" format="dimension" />
        <!-- 最大进度-->
        <attr name="maxProgress" format="integer" />
        <!-- 现在的进度-->
        <attr name="currProgress" format="integer" />
        <!-- 进度条的起始位置-->
        <attr name="progressInitialPosition" format="integer" />
        <!-- 是否使用动画-->
        <attr name="useAnimation" format="boolean" />
        <!-- 使用渐变-->
        <attr name="useGradient" format="boolean" />
        <!-- 边角是否是圆的-->
        <attr name="isCircleCorner" format="boolean" />
        <!-- 是否是实心的-->
        <attr name="isSolid" format="boolean" />
    </declare-styleable>

    <declare-styleable name="PieChartView">
        <attr name="isDes" format="boolean"/>
        <attr name="isOutCircle" format="boolean"/>
    </declare-styleable>

    <declare-styleable name="DragSortListView">
        <attr name="collapsed_height" format="dimension" />
        <attr name="drag_scroll_start" format="float" />
        <attr name="max_drag_scroll_speed" format="float" />
        <attr name="float_background_color" format="color" />
        <attr name="remove_mode">
            <enum name="clickRemove" value="0" />
            <enum name="flingRemove" value="1" />
        </attr>
        <attr name="track_drag_sort" format="boolean"/>
        <attr name="float_alpha" format="float"/>
        <attr name="slide_shuffle_speed" format="float"/>
        <attr name="remove_animation_duration" format="integer"/>
        <attr name="drop_animation_duration" format="integer"/>
        <attr name="drag_enabled" format="boolean" />
        <attr name="sort_enabled" format="boolean" />
        <attr name="remove_enabled" format="boolean" />
        <attr name="drag_start_mode">
            <enum name="onDown" value="0" />
            <enum name="onMove" value="1" />
            <enum name="onLongPress" value="2"/>
        </attr>
        <attr name="drag_handle_id" format="integer" />
        <attr name="fling_handle_id" format="integer" />
        <attr name="click_remove_id" format="integer" />
        <attr name="use_default_controller" format="boolean" />
    </declare-styleable>

    <declare-styleable name="TintableImageView">
        <attr name="tint" format="reference|color" />
    </declare-styleable>

    <declare-styleable name="MaterialRippleLayout">
        <attr name="mrl_rippleColor" format="color" localization="suggested" />
        <attr name="mrl_rippleDimension" format="dimension" localization="suggested" />
        <attr name="mrl_rippleOverlay" format="boolean" localization="suggested" />
        <attr name="mrl_rippleAlpha" format="float" localization="suggested" />
        <attr name="mrl_rippleDuration" format="integer" localization="suggested" />
        <attr name="mrl_rippleFadeDuration" format="integer" localization="suggested" />
        <attr name="mrl_rippleHover" format="boolean" localization="suggested" />
        <attr name="mrl_rippleBackground" format="color" localization="suggested" />
        <attr name="mrl_rippleDelayClick" format="boolean" localization="suggested" />
        <attr name="mrl_ripplePersistent" format="boolean" localization="suggested" />
        <attr name="mrl_rippleInAdapter" format="boolean" localization="suggested" />
        <attr name="mrl_rippleRoundedCorners" format="dimension" localization="suggested" />
    </declare-styleable>
    <declare-styleable name = "SportWheelBMI">
        <attr name = "layout_height" format = "dimension" />
    </declare-styleable>

    <declare-styleable name="MedicalWheelView">
        <attr name="current_text_color" format="color"></attr>
        <attr name="textSize_wheel" format="dimension"></attr>
        <attr name="alignCenter" format="boolean"></attr>
    </declare-styleable>

    <declare-styleable name="CustomToolbar">
        <attr name="left_firstIcon" format="integer" />
        <attr name="left_firstText" format="string" />
        <attr name="left_secondIcon" format="integer" />
        <attr name="left_secondText" format="string" />
        <attr name="right_firstIcon" format="integer" />
        <attr name="right_firstText" format="string" />
        <attr name="right_secondIcon" format="integer" />
        <attr name="right_secondText" format="string" />
        <attr name="toolbar_title" format="string" />
    </declare-styleable>
</resources>